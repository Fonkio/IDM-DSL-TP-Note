/*
 * generated by Xtext 2.25.0
 */
package ups.m2dl.tpNote.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MaisonDeDisqueGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class MaisonDeDisquesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpNote.MaisonDeDisque.MaisonDeDisques");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMaisonDeDisquesKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cAlbumsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAlbumsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAlbumsAlbumParserRuleCall_4_0 = (RuleCall)cAlbumsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cAlbumsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cAlbumsAlbumParserRuleCall_5_1_0 = (RuleCall)cAlbumsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cChansonsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cChansonsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cChansonsChansonParserRuleCall_9_0 = (RuleCall)cChansonsAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cChansonsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cChansonsChansonParserRuleCall_10_1_0 = (RuleCall)cChansonsAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cPersonnesKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cPersonnesAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cPersonnesPersonneParserRuleCall_14_0 = (RuleCall)cPersonnesAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cCommaKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cPersonnesAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cPersonnesPersonneParserRuleCall_15_1_0 = (RuleCall)cPersonnesAssignment_15_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//MaisonDeDisques returns MaisonDeDisques:
		//    'MaisonDeDisques'
		//    '{'
		//        'albums' '{' albums+=Album ( "," albums+=Album)* '}'
		//        'chansons' '{' chansons+=Chanson ( "," chansons+=Chanson)* '}'
		//        'personnes' '{' personnes+=Personne ( "," personnes+=Personne)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MaisonDeDisques'
		//'{'
		//    'albums' '{' albums+=Album ( "," albums+=Album)* '}'
		//    'chansons' '{' chansons+=Chanson ( "," chansons+=Chanson)* '}'
		//    'personnes' '{' personnes+=Personne ( "," personnes+=Personne)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'MaisonDeDisques'
		public Keyword getMaisonDeDisquesKeyword_0() { return cMaisonDeDisquesKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'albums'
		public Keyword getAlbumsKeyword_2() { return cAlbumsKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//albums+=Album
		public Assignment getAlbumsAssignment_4() { return cAlbumsAssignment_4; }
		
		//Album
		public RuleCall getAlbumsAlbumParserRuleCall_4_0() { return cAlbumsAlbumParserRuleCall_4_0; }
		
		//( "," albums+=Album)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//albums+=Album
		public Assignment getAlbumsAssignment_5_1() { return cAlbumsAssignment_5_1; }
		
		//Album
		public RuleCall getAlbumsAlbumParserRuleCall_5_1_0() { return cAlbumsAlbumParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'chansons'
		public Keyword getChansonsKeyword_7() { return cChansonsKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//chansons+=Chanson
		public Assignment getChansonsAssignment_9() { return cChansonsAssignment_9; }
		
		//Chanson
		public RuleCall getChansonsChansonParserRuleCall_9_0() { return cChansonsChansonParserRuleCall_9_0; }
		
		//( "," chansons+=Chanson)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//chansons+=Chanson
		public Assignment getChansonsAssignment_10_1() { return cChansonsAssignment_10_1; }
		
		//Chanson
		public RuleCall getChansonsChansonParserRuleCall_10_1_0() { return cChansonsChansonParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'personnes'
		public Keyword getPersonnesKeyword_12() { return cPersonnesKeyword_12; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }
		
		//personnes+=Personne
		public Assignment getPersonnesAssignment_14() { return cPersonnesAssignment_14; }
		
		//Personne
		public RuleCall getPersonnesPersonneParserRuleCall_14_0() { return cPersonnesPersonneParserRuleCall_14_0; }
		
		//( "," personnes+=Personne)*
		public Group getGroup_15() { return cGroup_15; }
		
		//","
		public Keyword getCommaKeyword_15_0() { return cCommaKeyword_15_0; }
		
		//personnes+=Personne
		public Assignment getPersonnesAssignment_15_1() { return cPersonnesAssignment_15_1; }
		
		//Personne
		public RuleCall getPersonnesPersonneParserRuleCall_15_1_0() { return cPersonnesPersonneParserRuleCall_15_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class AlbumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpNote.MaisonDeDisque.Album");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAlbumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cAnneeSortieKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cAnneeSortieAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cAnneeSortieEDateParserRuleCall_2_1_0 = (RuleCall)cAnneeSortieAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTypeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTypeAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTypeAlbumsTypeEnumRuleCall_3_1_0 = (RuleCall)cTypeAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNomKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNomAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNomEStringParserRuleCall_4_1_0 = (RuleCall)cNomAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cIdKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cIdAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cIdEStringParserRuleCall_5_1_0 = (RuleCall)cIdAssignment_5_1.eContents().get(0);
		private final Keyword cChansonsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cLeftParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cChansonsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cChansonsChansonCrossReference_8_0 = (CrossReference)cChansonsAssignment_8.eContents().get(0);
		private final RuleCall cChansonsChansonEStringParserRuleCall_8_0_1 = (RuleCall)cChansonsChansonCrossReference_8_0.eContents().get(1);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cCommaKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Assignment cChansonsAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final CrossReference cChansonsChansonCrossReference_9_1_0 = (CrossReference)cChansonsAssignment_9_1.eContents().get(0);
		private final RuleCall cChansonsChansonEStringParserRuleCall_9_1_0_1 = (RuleCall)cChansonsChansonCrossReference_9_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		
		//Album returns Album:
		//    'Album'
		//    '{'
		//        ('anneeSortie' anneeSortie=EDate)?
		//        ('type' type=AlbumsType)?
		//        ('nom' nom=EString)?
		//        ('id' id=EString)?
		//        'chansons' '(' chansons+=[Chanson|EString] ( "," chansons+=[Chanson|EString])* ')'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Album'
		//'{'
		//    ('anneeSortie' anneeSortie=EDate)?
		//    ('type' type=AlbumsType)?
		//    ('nom' nom=EString)?
		//    ('id' id=EString)?
		//    'chansons' '(' chansons+=[Chanson|EString] ( "," chansons+=[Chanson|EString])* ')'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Album'
		public Keyword getAlbumKeyword_0() { return cAlbumKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('anneeSortie' anneeSortie=EDate)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'anneeSortie'
		public Keyword getAnneeSortieKeyword_2_0() { return cAnneeSortieKeyword_2_0; }
		
		//anneeSortie=EDate
		public Assignment getAnneeSortieAssignment_2_1() { return cAnneeSortieAssignment_2_1; }
		
		//EDate
		public RuleCall getAnneeSortieEDateParserRuleCall_2_1_0() { return cAnneeSortieEDateParserRuleCall_2_1_0; }
		
		//('type' type=AlbumsType)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'type'
		public Keyword getTypeKeyword_3_0() { return cTypeKeyword_3_0; }
		
		//type=AlbumsType
		public Assignment getTypeAssignment_3_1() { return cTypeAssignment_3_1; }
		
		//AlbumsType
		public RuleCall getTypeAlbumsTypeEnumRuleCall_3_1_0() { return cTypeAlbumsTypeEnumRuleCall_3_1_0; }
		
		//('nom' nom=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'nom'
		public Keyword getNomKeyword_4_0() { return cNomKeyword_4_0; }
		
		//nom=EString
		public Assignment getNomAssignment_4_1() { return cNomAssignment_4_1; }
		
		//EString
		public RuleCall getNomEStringParserRuleCall_4_1_0() { return cNomEStringParserRuleCall_4_1_0; }
		
		//('id' id=EString)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'id'
		public Keyword getIdKeyword_5_0() { return cIdKeyword_5_0; }
		
		//id=EString
		public Assignment getIdAssignment_5_1() { return cIdAssignment_5_1; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_5_1_0() { return cIdEStringParserRuleCall_5_1_0; }
		
		//'chansons'
		public Keyword getChansonsKeyword_6() { return cChansonsKeyword_6; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_7() { return cLeftParenthesisKeyword_7; }
		
		//chansons+=[Chanson|EString]
		public Assignment getChansonsAssignment_8() { return cChansonsAssignment_8; }
		
		//[Chanson|EString]
		public CrossReference getChansonsChansonCrossReference_8_0() { return cChansonsChansonCrossReference_8_0; }
		
		//EString
		public RuleCall getChansonsChansonEStringParserRuleCall_8_0_1() { return cChansonsChansonEStringParserRuleCall_8_0_1; }
		
		//( "," chansons+=[Chanson|EString])*
		public Group getGroup_9() { return cGroup_9; }
		
		//","
		public Keyword getCommaKeyword_9_0() { return cCommaKeyword_9_0; }
		
		//chansons+=[Chanson|EString]
		public Assignment getChansonsAssignment_9_1() { return cChansonsAssignment_9_1; }
		
		//[Chanson|EString]
		public CrossReference getChansonsChansonCrossReference_9_1_0() { return cChansonsChansonCrossReference_9_1_0; }
		
		//EString
		public RuleCall getChansonsChansonEStringParserRuleCall_9_1_0_1() { return cChansonsChansonEStringParserRuleCall_9_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_10() { return cRightParenthesisKeyword_10; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
	}
	public class ChansonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpNote.MaisonDeDisque.Chanson");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChansonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cIdAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cIdEStringParserRuleCall_2_1_0 = (RuleCall)cIdAssignment_2_1.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cTitreKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cTitreAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cTitreEStringParserRuleCall_3_1_0 = (RuleCall)cTitreAssignment_3_1.eContents().get(0);
		private final Keyword cChanteursKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftParenthesisKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cChanteursAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cChanteursPersonneCrossReference_6_0 = (CrossReference)cChanteursAssignment_6.eContents().get(0);
		private final RuleCall cChanteursPersonneEStringParserRuleCall_6_0_1 = (RuleCall)cChanteursPersonneCrossReference_6_0.eContents().get(1);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cChanteursAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cChanteursPersonneCrossReference_7_1_0 = (CrossReference)cChanteursAssignment_7_1.eContents().get(0);
		private final RuleCall cChanteursPersonneEStringParserRuleCall_7_1_0_1 = (RuleCall)cChanteursPersonneCrossReference_7_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cAuteurKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cLeftParenthesisKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cAuteurAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final CrossReference cAuteurPersonneCrossReference_11_0 = (CrossReference)cAuteurAssignment_11.eContents().get(0);
		private final RuleCall cAuteurPersonneEStringParserRuleCall_11_0_1 = (RuleCall)cAuteurPersonneCrossReference_11_0.eContents().get(1);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cCommaKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cAuteurAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final CrossReference cAuteurPersonneCrossReference_12_1_0 = (CrossReference)cAuteurAssignment_12_1.eContents().get(0);
		private final RuleCall cAuteurPersonneEStringParserRuleCall_12_1_0_1 = (RuleCall)cAuteurPersonneCrossReference_12_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//Chanson returns Chanson:
		//    'Chanson'
		//    '{'
		//        ('id' id=EString)?
		//        ('titre' titre=EString)?
		//        'chanteurs' '(' chanteurs+=[Personne|EString] ( "," chanteurs+=[Personne|EString])* ')'
		//        'auteur' '(' auteur+=[Personne|EString] ( "," auteur+=[Personne|EString])* ')'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Chanson'
		//'{'
		//    ('id' id=EString)?
		//    ('titre' titre=EString)?
		//    'chanteurs' '(' chanteurs+=[Personne|EString] ( "," chanteurs+=[Personne|EString])* ')'
		//    'auteur' '(' auteur+=[Personne|EString] ( "," auteur+=[Personne|EString])* ')'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Chanson'
		public Keyword getChansonKeyword_0() { return cChansonKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('id' id=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'id'
		public Keyword getIdKeyword_2_0() { return cIdKeyword_2_0; }
		
		//id=EString
		public Assignment getIdAssignment_2_1() { return cIdAssignment_2_1; }
		
		//EString
		public RuleCall getIdEStringParserRuleCall_2_1_0() { return cIdEStringParserRuleCall_2_1_0; }
		
		//('titre' titre=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'titre'
		public Keyword getTitreKeyword_3_0() { return cTitreKeyword_3_0; }
		
		//titre=EString
		public Assignment getTitreAssignment_3_1() { return cTitreAssignment_3_1; }
		
		//EString
		public RuleCall getTitreEStringParserRuleCall_3_1_0() { return cTitreEStringParserRuleCall_3_1_0; }
		
		//'chanteurs'
		public Keyword getChanteursKeyword_4() { return cChanteursKeyword_4; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5() { return cLeftParenthesisKeyword_5; }
		
		//chanteurs+=[Personne|EString]
		public Assignment getChanteursAssignment_6() { return cChanteursAssignment_6; }
		
		//[Personne|EString]
		public CrossReference getChanteursPersonneCrossReference_6_0() { return cChanteursPersonneCrossReference_6_0; }
		
		//EString
		public RuleCall getChanteursPersonneEStringParserRuleCall_6_0_1() { return cChanteursPersonneEStringParserRuleCall_6_0_1; }
		
		//( "," chanteurs+=[Personne|EString])*
		public Group getGroup_7() { return cGroup_7; }
		
		//","
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//chanteurs+=[Personne|EString]
		public Assignment getChanteursAssignment_7_1() { return cChanteursAssignment_7_1; }
		
		//[Personne|EString]
		public CrossReference getChanteursPersonneCrossReference_7_1_0() { return cChanteursPersonneCrossReference_7_1_0; }
		
		//EString
		public RuleCall getChanteursPersonneEStringParserRuleCall_7_1_0_1() { return cChanteursPersonneEStringParserRuleCall_7_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_8() { return cRightParenthesisKeyword_8; }
		
		//'auteur'
		public Keyword getAuteurKeyword_9() { return cAuteurKeyword_9; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_10() { return cLeftParenthesisKeyword_10; }
		
		//auteur+=[Personne|EString]
		public Assignment getAuteurAssignment_11() { return cAuteurAssignment_11; }
		
		//[Personne|EString]
		public CrossReference getAuteurPersonneCrossReference_11_0() { return cAuteurPersonneCrossReference_11_0; }
		
		//EString
		public RuleCall getAuteurPersonneEStringParserRuleCall_11_0_1() { return cAuteurPersonneEStringParserRuleCall_11_0_1; }
		
		//( "," auteur+=[Personne|EString])*
		public Group getGroup_12() { return cGroup_12; }
		
		//","
		public Keyword getCommaKeyword_12_0() { return cCommaKeyword_12_0; }
		
		//auteur+=[Personne|EString]
		public Assignment getAuteurAssignment_12_1() { return cAuteurAssignment_12_1; }
		
		//[Personne|EString]
		public CrossReference getAuteurPersonneCrossReference_12_1_0() { return cAuteurPersonneCrossReference_12_1_0; }
		
		//EString
		public RuleCall getAuteurPersonneEStringParserRuleCall_12_1_0_1() { return cAuteurPersonneEStringParserRuleCall_12_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_13() { return cRightParenthesisKeyword_13; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}
	public class PersonneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpNote.MaisonDeDisque.Personne");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPersonneAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPersonneKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNomKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNomAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNomEStringParserRuleCall_3_1_0 = (RuleCall)cNomAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cChansonsChanteurKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cChansonsChanteurAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cChansonsChanteurChansonCrossReference_4_2_0 = (CrossReference)cChansonsChanteurAssignment_4_2.eContents().get(0);
		private final RuleCall cChansonsChanteurChansonEStringParserRuleCall_4_2_0_1 = (RuleCall)cChansonsChanteurChansonCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cChansonsChanteurAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cChansonsChanteurChansonCrossReference_4_3_1_0 = (CrossReference)cChansonsChanteurAssignment_4_3_1.eContents().get(0);
		private final RuleCall cChansonsChanteurChansonEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cChansonsChanteurChansonCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cChansonsAuteurKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cChansonsAuteurAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final CrossReference cChansonsAuteurChansonCrossReference_5_2_0 = (CrossReference)cChansonsAuteurAssignment_5_2.eContents().get(0);
		private final RuleCall cChansonsAuteurChansonEStringParserRuleCall_5_2_0_1 = (RuleCall)cChansonsAuteurChansonCrossReference_5_2_0.eContents().get(1);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cChansonsAuteurAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final CrossReference cChansonsAuteurChansonCrossReference_5_3_1_0 = (CrossReference)cChansonsAuteurAssignment_5_3_1.eContents().get(0);
		private final RuleCall cChansonsAuteurChansonEStringParserRuleCall_5_3_1_0_1 = (RuleCall)cChansonsAuteurChansonCrossReference_5_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Personne returns Personne:
		//    {Personne}
		//    'Personne'
		//    '{'
		//        ('nom' nom=EString)?
		//        ('chansonsChanteur' '(' chansonsChanteur+=[Chanson|EString] ( "," chansonsChanteur+=[Chanson|EString])* ')' )?
		//        ('chansonsAuteur' '(' chansonsAuteur+=[Chanson|EString] ( "," chansonsAuteur+=[Chanson|EString])* ')' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Personne}
		//'Personne'
		//'{'
		//    ('nom' nom=EString)?
		//    ('chansonsChanteur' '(' chansonsChanteur+=[Chanson|EString] ( "," chansonsChanteur+=[Chanson|EString])* ')' )?
		//    ('chansonsAuteur' '(' chansonsAuteur+=[Chanson|EString] ( "," chansonsAuteur+=[Chanson|EString])* ')' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{Personne}
		public Action getPersonneAction_0() { return cPersonneAction_0; }
		
		//'Personne'
		public Keyword getPersonneKeyword_1() { return cPersonneKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('nom' nom=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'nom'
		public Keyword getNomKeyword_3_0() { return cNomKeyword_3_0; }
		
		//nom=EString
		public Assignment getNomAssignment_3_1() { return cNomAssignment_3_1; }
		
		//EString
		public RuleCall getNomEStringParserRuleCall_3_1_0() { return cNomEStringParserRuleCall_3_1_0; }
		
		//('chansonsChanteur' '(' chansonsChanteur+=[Chanson|EString] ( "," chansonsChanteur+=[Chanson|EString])* ')' )?
		public Group getGroup_4() { return cGroup_4; }
		
		//'chansonsChanteur'
		public Keyword getChansonsChanteurKeyword_4_0() { return cChansonsChanteurKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//chansonsChanteur+=[Chanson|EString]
		public Assignment getChansonsChanteurAssignment_4_2() { return cChansonsChanteurAssignment_4_2; }
		
		//[Chanson|EString]
		public CrossReference getChansonsChanteurChansonCrossReference_4_2_0() { return cChansonsChanteurChansonCrossReference_4_2_0; }
		
		//EString
		public RuleCall getChansonsChanteurChansonEStringParserRuleCall_4_2_0_1() { return cChansonsChanteurChansonEStringParserRuleCall_4_2_0_1; }
		
		//( "," chansonsChanteur+=[Chanson|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//chansonsChanteur+=[Chanson|EString]
		public Assignment getChansonsChanteurAssignment_4_3_1() { return cChansonsChanteurAssignment_4_3_1; }
		
		//[Chanson|EString]
		public CrossReference getChansonsChanteurChansonCrossReference_4_3_1_0() { return cChansonsChanteurChansonCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getChansonsChanteurChansonEStringParserRuleCall_4_3_1_0_1() { return cChansonsChanteurChansonEStringParserRuleCall_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//('chansonsAuteur' '(' chansonsAuteur+=[Chanson|EString] ( "," chansonsAuteur+=[Chanson|EString])* ')' )?
		public Group getGroup_5() { return cGroup_5; }
		
		//'chansonsAuteur'
		public Keyword getChansonsAuteurKeyword_5_0() { return cChansonsAuteurKeyword_5_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_5_1() { return cLeftParenthesisKeyword_5_1; }
		
		//chansonsAuteur+=[Chanson|EString]
		public Assignment getChansonsAuteurAssignment_5_2() { return cChansonsAuteurAssignment_5_2; }
		
		//[Chanson|EString]
		public CrossReference getChansonsAuteurChansonCrossReference_5_2_0() { return cChansonsAuteurChansonCrossReference_5_2_0; }
		
		//EString
		public RuleCall getChansonsAuteurChansonEStringParserRuleCall_5_2_0_1() { return cChansonsAuteurChansonEStringParserRuleCall_5_2_0_1; }
		
		//( "," chansonsAuteur+=[Chanson|EString])*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//chansonsAuteur+=[Chanson|EString]
		public Assignment getChansonsAuteurAssignment_5_3_1() { return cChansonsAuteurAssignment_5_3_1; }
		
		//[Chanson|EString]
		public CrossReference getChansonsAuteurChansonCrossReference_5_3_1_0() { return cChansonsAuteurChansonCrossReference_5_3_1_0; }
		
		//EString
		public RuleCall getChansonsAuteurChansonEStringParserRuleCall_5_3_1_0_1() { return cChansonsAuteurChansonEStringParserRuleCall_5_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_5_4() { return cRightParenthesisKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpNote.MaisonDeDisque.EDate");
		private final Keyword cEDateKeyword = (Keyword)rule.eContents().get(1);
		
		//EDate returns ecore::EDate:
		//    'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
		@Override public ParserRule getRule() { return rule; }
		
		//'EDate'
		public Keyword getEDateKeyword() { return cEDateKeyword; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpNote.MaisonDeDisque.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	public class AlbumsTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpNote.MaisonDeDisque.AlbumsType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSINGLEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSINGLESINGLEKeyword_0_0 = (Keyword)cSINGLEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPILATIONEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCOMPILATIONCOMPILATIONKeyword_1_0 = (Keyword)cCOMPILATIONEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum AlbumsType returns AlbumsType:
		//                SINGLE = 'SINGLE' | COMPILATION = 'COMPILATION';
		public EnumRule getRule() { return rule; }
		
		//SINGLE = 'SINGLE' | COMPILATION = 'COMPILATION'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SINGLE = 'SINGLE'
		public EnumLiteralDeclaration getSINGLEEnumLiteralDeclaration_0() { return cSINGLEEnumLiteralDeclaration_0; }
		
		//'SINGLE'
		public Keyword getSINGLESINGLEKeyword_0_0() { return cSINGLESINGLEKeyword_0_0; }
		
		//COMPILATION = 'COMPILATION'
		public EnumLiteralDeclaration getCOMPILATIONEnumLiteralDeclaration_1() { return cCOMPILATIONEnumLiteralDeclaration_1; }
		
		//'COMPILATION'
		public Keyword getCOMPILATIONCOMPILATIONKeyword_1_0() { return cCOMPILATIONCOMPILATIONKeyword_1_0; }
	}
	
	private final MaisonDeDisquesElements pMaisonDeDisques;
	private final AlbumElements pAlbum;
	private final ChansonElements pChanson;
	private final PersonneElements pPersonne;
	private final EDateElements pEDate;
	private final AlbumsTypeElements eAlbumsType;
	private final EStringElements pEString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MaisonDeDisqueGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMaisonDeDisques = new MaisonDeDisquesElements();
		this.pAlbum = new AlbumElements();
		this.pChanson = new ChansonElements();
		this.pPersonne = new PersonneElements();
		this.pEDate = new EDateElements();
		this.eAlbumsType = new AlbumsTypeElements();
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("ups.m2dl.tpNote.MaisonDeDisque".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//MaisonDeDisques returns MaisonDeDisques:
	//    'MaisonDeDisques'
	//    '{'
	//        'albums' '{' albums+=Album ( "," albums+=Album)* '}'
	//        'chansons' '{' chansons+=Chanson ( "," chansons+=Chanson)* '}'
	//        'personnes' '{' personnes+=Personne ( "," personnes+=Personne)* '}'
	//    '}';
	public MaisonDeDisquesElements getMaisonDeDisquesAccess() {
		return pMaisonDeDisques;
	}
	
	public ParserRule getMaisonDeDisquesRule() {
		return getMaisonDeDisquesAccess().getRule();
	}
	
	//Album returns Album:
	//    'Album'
	//    '{'
	//        ('anneeSortie' anneeSortie=EDate)?
	//        ('type' type=AlbumsType)?
	//        ('nom' nom=EString)?
	//        ('id' id=EString)?
	//        'chansons' '(' chansons+=[Chanson|EString] ( "," chansons+=[Chanson|EString])* ')'
	//    '}';
	public AlbumElements getAlbumAccess() {
		return pAlbum;
	}
	
	public ParserRule getAlbumRule() {
		return getAlbumAccess().getRule();
	}
	
	//Chanson returns Chanson:
	//    'Chanson'
	//    '{'
	//        ('id' id=EString)?
	//        ('titre' titre=EString)?
	//        'chanteurs' '(' chanteurs+=[Personne|EString] ( "," chanteurs+=[Personne|EString])* ')'
	//        'auteur' '(' auteur+=[Personne|EString] ( "," auteur+=[Personne|EString])* ')'
	//    '}';
	public ChansonElements getChansonAccess() {
		return pChanson;
	}
	
	public ParserRule getChansonRule() {
		return getChansonAccess().getRule();
	}
	
	//Personne returns Personne:
	//    {Personne}
	//    'Personne'
	//    '{'
	//        ('nom' nom=EString)?
	//        ('chansonsChanteur' '(' chansonsChanteur+=[Chanson|EString] ( "," chansonsChanteur+=[Chanson|EString])* ')' )?
	//        ('chansonsAuteur' '(' chansonsAuteur+=[Chanson|EString] ( "," chansonsAuteur+=[Chanson|EString])* ')' )?
	//    '}';
	public PersonneElements getPersonneAccess() {
		return pPersonne;
	}
	
	public ParserRule getPersonneRule() {
		return getPersonneAccess().getRule();
	}
	
	//EDate returns ecore::EDate:
	//    'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;
	public EDateElements getEDateAccess() {
		return pEDate;
	}
	
	public ParserRule getEDateRule() {
		return getEDateAccess().getRule();
	}
	
	//enum AlbumsType returns AlbumsType:
	//                SINGLE = 'SINGLE' | COMPILATION = 'COMPILATION';
	public AlbumsTypeElements getAlbumsTypeAccess() {
		return eAlbumsType;
	}
	
	public EnumRule getAlbumsTypeRule() {
		return getAlbumsTypeAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
