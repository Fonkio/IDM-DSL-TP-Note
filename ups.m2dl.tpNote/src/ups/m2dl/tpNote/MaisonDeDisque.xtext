// automatically generated by Xtext
grammar ups.m2dl.tpNote.MaisonDeDisque with org.eclipse.xtext.common.Terminals

import "http://ups/m2/TPNote/albums" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

MaisonDeDisques returns MaisonDeDisques:
	'MaisonDeDisques'
	'{'
		'albums' '{' albums+=Album ( "," albums+=Album)* '}' 
		'chansons' '{' chansons+=Chanson ( "," chansons+=Chanson)* '}' 
		'personnes' '{' personnes+=Personne ( "," personnes+=Personne)* '}' 
	'}';




Album returns Album:
	'Album'
	'{'
		('anneeSortie' anneeSortie=EDate)?
		('type' type=AlbumsType)?
		('nom' nom=EString)?
		('id' id=EString)?
		'chansons' '(' chansons+=[Chanson|EString] ( "," chansons+=[Chanson|EString])* ')' 
	'}';

Chanson returns Chanson:
	'Chanson'
	'{'
		('id' id=EString)?
		('titre' titre=EString)?
		'chanteurs' '(' chanteurs+=[Personne|EString] ( "," chanteurs+=[Personne|EString])* ')' 
		'auteur' '(' auteur+=[Personne|EString] ( "," auteur+=[Personne|EString])* ')' 
	'}';

Personne returns Personne:
	{Personne}
	'Personne'
	'{'
		('nom' nom=EString)?
		('chansonsChanteur' '(' chansonsChanteur+=[Chanson|EString] ( "," chansonsChanteur+=[Chanson|EString])* ')' )?
		('chansonsAuteur' '(' chansonsAuteur+=[Chanson|EString] ( "," chansonsAuteur+=[Chanson|EString])* ')' )?
	'}';

EDate returns ecore::EDate:
	'EDate' /* TODO: implement this rule and an appropriate IValueConverter */;

enum AlbumsType returns AlbumsType:
				SINGLE = 'SINGLE' | COMPILATION = 'COMPILATION';

EString returns ecore::EString:
	STRING | ID;
