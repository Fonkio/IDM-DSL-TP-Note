/*
 * generated by Xtext 2.25.0
 */
grammar InternalMaisonDeDisque;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ups.m2dl.tpnote.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ups.m2dl.tpnote.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ups.m2dl.tpnote.services.MaisonDeDisqueGrammarAccess;

}

@parser::members {

 	private MaisonDeDisqueGrammarAccess grammarAccess;

    public InternalMaisonDeDisqueParser(TokenStream input, MaisonDeDisqueGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MaisonDeDisque";
   	}

   	@Override
   	protected MaisonDeDisqueGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMaisonDeDisque
entryRuleMaisonDeDisque returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaisonDeDisqueRule()); }
	iv_ruleMaisonDeDisque=ruleMaisonDeDisque
	{ $current=$iv_ruleMaisonDeDisque.current; }
	EOF;

// Rule MaisonDeDisque
ruleMaisonDeDisque returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MaisonDeDisque'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaisonDeDisqueAccess().getMaisonDeDisqueKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaisonDeDisqueAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='chansons'
		{
			newLeafNode(otherlv_2, grammarAccess.getMaisonDeDisqueAccess().getChansonsKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMaisonDeDisqueAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaisonDeDisqueAccess().getChansonsChansonParserRuleCall_4_0());
				}
				lv_chansons_4_0=ruleChanson
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaisonDeDisqueRule());
					}
					add(
						$current,
						"chansons",
						lv_chansons_4_0,
						"ups.m2dl.tpnote.MaisonDeDisque.Chanson");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getMaisonDeDisqueAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaisonDeDisqueAccess().getChansonsChansonParserRuleCall_5_1_0());
					}
					lv_chansons_6_0=ruleChanson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaisonDeDisqueRule());
						}
						add(
							$current,
							"chansons",
							lv_chansons_6_0,
							"ups.m2dl.tpnote.MaisonDeDisque.Chanson");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getMaisonDeDisqueAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='albums'
		{
			newLeafNode(otherlv_8, grammarAccess.getMaisonDeDisqueAccess().getAlbumsKeyword_7());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getMaisonDeDisqueAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaisonDeDisqueAccess().getAlbumsAlbumParserRuleCall_9_0());
				}
				lv_albums_10_0=ruleAlbum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaisonDeDisqueRule());
					}
					add(
						$current,
						"albums",
						lv_albums_10_0,
						"ups.m2dl.tpnote.MaisonDeDisque.Album");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getMaisonDeDisqueAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaisonDeDisqueAccess().getAlbumsAlbumParserRuleCall_10_1_0());
					}
					lv_albums_12_0=ruleAlbum
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaisonDeDisqueRule());
						}
						add(
							$current,
							"albums",
							lv_albums_12_0,
							"ups.m2dl.tpnote.MaisonDeDisque.Album");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getMaisonDeDisqueAccess().getRightCurlyBracketKeyword_11());
		}
		otherlv_14='personnes'
		{
			newLeafNode(otherlv_14, grammarAccess.getMaisonDeDisqueAccess().getPersonnesKeyword_12());
		}
		otherlv_15='{'
		{
			newLeafNode(otherlv_15, grammarAccess.getMaisonDeDisqueAccess().getLeftCurlyBracketKeyword_13());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaisonDeDisqueAccess().getPersonnesPersonneParserRuleCall_14_0());
				}
				lv_personnes_16_0=rulePersonne
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaisonDeDisqueRule());
					}
					add(
						$current,
						"personnes",
						lv_personnes_16_0,
						"ups.m2dl.tpnote.MaisonDeDisque.Personne");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_17=','
			{
				newLeafNode(otherlv_17, grammarAccess.getMaisonDeDisqueAccess().getCommaKeyword_15_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaisonDeDisqueAccess().getPersonnesPersonneParserRuleCall_15_1_0());
					}
					lv_personnes_18_0=rulePersonne
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaisonDeDisqueRule());
						}
						add(
							$current,
							"personnes",
							lv_personnes_18_0,
							"ups.m2dl.tpnote.MaisonDeDisque.Personne");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getMaisonDeDisqueAccess().getRightCurlyBracketKeyword_16());
		}
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getMaisonDeDisqueAccess().getRightCurlyBracketKeyword_17());
		}
	)
;

// Entry rule entryRuleChanson
entryRuleChanson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChansonRule()); }
	iv_ruleChanson=ruleChanson
	{ $current=$iv_ruleChanson.current; }
	EOF;

// Rule Chanson
ruleChanson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Chanson'
		{
			newLeafNode(otherlv_0, grammarAccess.getChansonAccess().getChansonKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChansonAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChansonRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ups.m2dl.tpnote.MaisonDeDisque.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getChansonAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='auteurs'
		{
			newLeafNode(otherlv_3, grammarAccess.getChansonAccess().getAuteursKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getChansonAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChansonRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getChansonAccess().getAuteursPersonneCrossReference_5_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6=','
			{
				newLeafNode(otherlv_6, grammarAccess.getChansonAccess().getCommaKeyword_6_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChansonRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getChansonAccess().getAuteursPersonneCrossReference_6_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getChansonAccess().getRightParenthesisKeyword_7());
		}
		otherlv_9='chanteurs'
		{
			newLeafNode(otherlv_9, grammarAccess.getChansonAccess().getChanteursKeyword_8());
		}
		otherlv_10='('
		{
			newLeafNode(otherlv_10, grammarAccess.getChansonAccess().getLeftParenthesisKeyword_9());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChansonRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getChansonAccess().getChanteursPersonneCrossReference_10_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_12=','
			{
				newLeafNode(otherlv_12, grammarAccess.getChansonAccess().getCommaKeyword_11_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChansonRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getChansonAccess().getChanteursPersonneCrossReference_11_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_14=')'
		{
			newLeafNode(otherlv_14, grammarAccess.getChansonAccess().getRightParenthesisKeyword_12());
		}
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getChansonAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleAlbum
entryRuleAlbum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlbumRule()); }
	iv_ruleAlbum=ruleAlbum
	{ $current=$iv_ruleAlbum.current; }
	EOF;

// Rule Album
ruleAlbum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Album'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlbumAccess().getAlbumKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlbumAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlbumRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"ups.m2dl.tpnote.MaisonDeDisque.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAlbumAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='anneeSortie'
			{
				newLeafNode(otherlv_3, grammarAccess.getAlbumAccess().getAnneeSortieKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlbumAccess().getAnneeSortieEStringParserRuleCall_3_1_0());
					}
					lv_anneeSortie_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlbumRule());
						}
						set(
							$current,
							"anneeSortie",
							lv_anneeSortie_4_0,
							"ups.m2dl.tpnote.MaisonDeDisque.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='type'
			{
				newLeafNode(otherlv_5, grammarAccess.getAlbumAccess().getTypeKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlbumAccess().getTypeAlbumTypeEnumRuleCall_4_1_0());
					}
					lv_type_6_0=ruleAlbumType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlbumRule());
						}
						set(
							$current,
							"type",
							lv_type_6_0,
							"ups.m2dl.tpnote.MaisonDeDisque.AlbumType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='chansons'
		{
			newLeafNode(otherlv_7, grammarAccess.getAlbumAccess().getChansonsKeyword_5());
		}
		otherlv_8='('
		{
			newLeafNode(otherlv_8, grammarAccess.getAlbumAccess().getLeftParenthesisKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlbumRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAlbumAccess().getChansonsChansonCrossReference_7_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10=','
			{
				newLeafNode(otherlv_10, grammarAccess.getAlbumAccess().getCommaKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlbumRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAlbumAccess().getChansonsChansonCrossReference_8_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12=')'
		{
			newLeafNode(otherlv_12, grammarAccess.getAlbumAccess().getRightParenthesisKeyword_9());
		}
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getAlbumAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRulePersonne
entryRulePersonne returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonneRule()); }
	iv_rulePersonne=rulePersonne
	{ $current=$iv_rulePersonne.current; }
	EOF;

// Rule Personne
rulePersonne returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPersonneAccess().getPersonneAction_0(),
					$current);
			}
		)
		otherlv_1='Personne'
		{
			newLeafNode(otherlv_1, grammarAccess.getPersonneAccess().getPersonneKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPersonneAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPersonneRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"ups.m2dl.tpnote.MaisonDeDisque.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule AlbumType
ruleAlbumType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='SINGLE'
			{
				$current = grammarAccess.getAlbumTypeAccess().getSINGLEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAlbumTypeAccess().getSINGLEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='COMPILATION'
			{
				$current = grammarAccess.getAlbumTypeAccess().getCOMPILATIONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAlbumTypeAccess().getCOMPILATIONEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
