/*
 * generated by Xtext 2.25.0
 */
grammar InternalMaisonDeDisque;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package ups.m2dl.tpNote.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package ups.m2dl.tpNote.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import ups.m2dl.tpNote.services.MaisonDeDisqueGrammarAccess;

}

@parser::members {

 	private MaisonDeDisqueGrammarAccess grammarAccess;

    public InternalMaisonDeDisqueParser(TokenStream input, MaisonDeDisqueGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MaisonDeDisques";
   	}

   	@Override
   	protected MaisonDeDisqueGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMaisonDeDisques
entryRuleMaisonDeDisques returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMaisonDeDisquesRule()); }
	iv_ruleMaisonDeDisques=ruleMaisonDeDisques
	{ $current=$iv_ruleMaisonDeDisques.current; }
	EOF;

// Rule MaisonDeDisques
ruleMaisonDeDisques returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MaisonDeDisques'
		{
			newLeafNode(otherlv_0, grammarAccess.getMaisonDeDisquesAccess().getMaisonDeDisquesKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMaisonDeDisquesAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='albums'
		{
			newLeafNode(otherlv_2, grammarAccess.getMaisonDeDisquesAccess().getAlbumsKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getMaisonDeDisquesAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaisonDeDisquesAccess().getAlbumsAlbumParserRuleCall_4_0());
				}
				lv_albums_4_0=ruleAlbum
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaisonDeDisquesRule());
					}
					add(
						$current,
						"albums",
						lv_albums_4_0,
						"ups.m2dl.tpNote.MaisonDeDisque.Album");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5=','
			{
				newLeafNode(otherlv_5, grammarAccess.getMaisonDeDisquesAccess().getCommaKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaisonDeDisquesAccess().getAlbumsAlbumParserRuleCall_5_1_0());
					}
					lv_albums_6_0=ruleAlbum
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaisonDeDisquesRule());
						}
						add(
							$current,
							"albums",
							lv_albums_6_0,
							"ups.m2dl.tpNote.MaisonDeDisque.Album");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getMaisonDeDisquesAccess().getRightCurlyBracketKeyword_6());
		}
		otherlv_8='chansons'
		{
			newLeafNode(otherlv_8, grammarAccess.getMaisonDeDisquesAccess().getChansonsKeyword_7());
		}
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getMaisonDeDisquesAccess().getLeftCurlyBracketKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaisonDeDisquesAccess().getChansonsChansonParserRuleCall_9_0());
				}
				lv_chansons_10_0=ruleChanson
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaisonDeDisquesRule());
					}
					add(
						$current,
						"chansons",
						lv_chansons_10_0,
						"ups.m2dl.tpNote.MaisonDeDisque.Chanson");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getMaisonDeDisquesAccess().getCommaKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaisonDeDisquesAccess().getChansonsChansonParserRuleCall_10_1_0());
					}
					lv_chansons_12_0=ruleChanson
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaisonDeDisquesRule());
						}
						add(
							$current,
							"chansons",
							lv_chansons_12_0,
							"ups.m2dl.tpNote.MaisonDeDisque.Chanson");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getMaisonDeDisquesAccess().getRightCurlyBracketKeyword_11());
		}
		otherlv_14='personnes'
		{
			newLeafNode(otherlv_14, grammarAccess.getMaisonDeDisquesAccess().getPersonnesKeyword_12());
		}
		otherlv_15='{'
		{
			newLeafNode(otherlv_15, grammarAccess.getMaisonDeDisquesAccess().getLeftCurlyBracketKeyword_13());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMaisonDeDisquesAccess().getPersonnesPersonneParserRuleCall_14_0());
				}
				lv_personnes_16_0=rulePersonne
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMaisonDeDisquesRule());
					}
					add(
						$current,
						"personnes",
						lv_personnes_16_0,
						"ups.m2dl.tpNote.MaisonDeDisque.Personne");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_17=','
			{
				newLeafNode(otherlv_17, grammarAccess.getMaisonDeDisquesAccess().getCommaKeyword_15_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getMaisonDeDisquesAccess().getPersonnesPersonneParserRuleCall_15_1_0());
					}
					lv_personnes_18_0=rulePersonne
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMaisonDeDisquesRule());
						}
						add(
							$current,
							"personnes",
							lv_personnes_18_0,
							"ups.m2dl.tpNote.MaisonDeDisque.Personne");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_19='}'
		{
			newLeafNode(otherlv_19, grammarAccess.getMaisonDeDisquesAccess().getRightCurlyBracketKeyword_16());
		}
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getMaisonDeDisquesAccess().getRightCurlyBracketKeyword_17());
		}
	)
;

// Entry rule entryRuleAlbum
entryRuleAlbum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlbumRule()); }
	iv_ruleAlbum=ruleAlbum
	{ $current=$iv_ruleAlbum.current; }
	EOF;

// Rule Album
ruleAlbum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Album'
		{
			newLeafNode(otherlv_0, grammarAccess.getAlbumAccess().getAlbumKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getAlbumAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='anneeSortie'
			{
				newLeafNode(otherlv_2, grammarAccess.getAlbumAccess().getAnneeSortieKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlbumAccess().getAnneeSortieEDateParserRuleCall_2_1_0());
					}
					lv_anneeSortie_3_0=ruleEDate
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlbumRule());
						}
						set(
							$current,
							"anneeSortie",
							lv_anneeSortie_3_0,
							"ups.m2dl.tpNote.MaisonDeDisque.EDate");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='type'
			{
				newLeafNode(otherlv_4, grammarAccess.getAlbumAccess().getTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlbumAccess().getTypeAlbumsTypeEnumRuleCall_3_1_0());
					}
					lv_type_5_0=ruleAlbumsType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlbumRule());
						}
						set(
							$current,
							"type",
							lv_type_5_0,
							"ups.m2dl.tpNote.MaisonDeDisque.AlbumsType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_6='nom'
			{
				newLeafNode(otherlv_6, grammarAccess.getAlbumAccess().getNomKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlbumAccess().getNomEStringParserRuleCall_4_1_0());
					}
					lv_nom_7_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlbumRule());
						}
						set(
							$current,
							"nom",
							lv_nom_7_0,
							"ups.m2dl.tpNote.MaisonDeDisque.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_8='id'
			{
				newLeafNode(otherlv_8, grammarAccess.getAlbumAccess().getIdKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlbumAccess().getIdEStringParserRuleCall_5_1_0());
					}
					lv_id_9_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlbumRule());
						}
						set(
							$current,
							"id",
							lv_id_9_0,
							"ups.m2dl.tpNote.MaisonDeDisque.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_10='chansons'
		{
			newLeafNode(otherlv_10, grammarAccess.getAlbumAccess().getChansonsKeyword_6());
		}
		otherlv_11='('
		{
			newLeafNode(otherlv_11, grammarAccess.getAlbumAccess().getLeftParenthesisKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAlbumRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getAlbumAccess().getChansonsChansonCrossReference_8_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13=','
			{
				newLeafNode(otherlv_13, grammarAccess.getAlbumAccess().getCommaKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAlbumRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getAlbumAccess().getChansonsChansonCrossReference_9_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getAlbumAccess().getRightParenthesisKeyword_10());
		}
		otherlv_16='}'
		{
			newLeafNode(otherlv_16, grammarAccess.getAlbumAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleChanson
entryRuleChanson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChansonRule()); }
	iv_ruleChanson=ruleChanson
	{ $current=$iv_ruleChanson.current; }
	EOF;

// Rule Chanson
ruleChanson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Chanson'
		{
			newLeafNode(otherlv_0, grammarAccess.getChansonAccess().getChansonKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getChansonAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			otherlv_2='id'
			{
				newLeafNode(otherlv_2, grammarAccess.getChansonAccess().getIdKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChansonAccess().getIdEStringParserRuleCall_2_1_0());
					}
					lv_id_3_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChansonRule());
						}
						set(
							$current,
							"id",
							lv_id_3_0,
							"ups.m2dl.tpNote.MaisonDeDisque.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_4='titre'
			{
				newLeafNode(otherlv_4, grammarAccess.getChansonAccess().getTitreKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChansonAccess().getTitreEStringParserRuleCall_3_1_0());
					}
					lv_titre_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChansonRule());
						}
						set(
							$current,
							"titre",
							lv_titre_5_0,
							"ups.m2dl.tpNote.MaisonDeDisque.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='chanteurs'
		{
			newLeafNode(otherlv_6, grammarAccess.getChansonAccess().getChanteursKeyword_4());
		}
		otherlv_7='('
		{
			newLeafNode(otherlv_7, grammarAccess.getChansonAccess().getLeftParenthesisKeyword_5());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChansonRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getChansonAccess().getChanteursPersonneCrossReference_6_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9=','
			{
				newLeafNode(otherlv_9, grammarAccess.getChansonAccess().getCommaKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChansonRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getChansonAccess().getChanteursPersonneCrossReference_7_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_11=')'
		{
			newLeafNode(otherlv_11, grammarAccess.getChansonAccess().getRightParenthesisKeyword_8());
		}
		otherlv_12='auteur'
		{
			newLeafNode(otherlv_12, grammarAccess.getChansonAccess().getAuteurKeyword_9());
		}
		otherlv_13='('
		{
			newLeafNode(otherlv_13, grammarAccess.getChansonAccess().getLeftParenthesisKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChansonRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getChansonAccess().getAuteurPersonneCrossReference_11_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_15=','
			{
				newLeafNode(otherlv_15, grammarAccess.getChansonAccess().getCommaKeyword_12_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getChansonRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getChansonAccess().getAuteurPersonneCrossReference_12_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_17=')'
		{
			newLeafNode(otherlv_17, grammarAccess.getChansonAccess().getRightParenthesisKeyword_13());
		}
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getChansonAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRulePersonne
entryRulePersonne returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonneRule()); }
	iv_rulePersonne=rulePersonne
	{ $current=$iv_rulePersonne.current; }
	EOF;

// Rule Personne
rulePersonne returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPersonneAccess().getPersonneAction_0(),
					$current);
			}
		)
		otherlv_1='Personne'
		{
			newLeafNode(otherlv_1, grammarAccess.getPersonneAccess().getPersonneKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getPersonneAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='nom'
			{
				newLeafNode(otherlv_3, grammarAccess.getPersonneAccess().getNomKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPersonneAccess().getNomEStringParserRuleCall_3_1_0());
					}
					lv_nom_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPersonneRule());
						}
						set(
							$current,
							"nom",
							lv_nom_4_0,
							"ups.m2dl.tpNote.MaisonDeDisque.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='chansonsChanteur'
			{
				newLeafNode(otherlv_5, grammarAccess.getPersonneAccess().getChansonsChanteurKeyword_4_0());
			}
			otherlv_6='('
			{
				newLeafNode(otherlv_6, grammarAccess.getPersonneAccess().getLeftParenthesisKeyword_4_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPersonneRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPersonneAccess().getChansonsChanteurChansonCrossReference_4_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getPersonneAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPersonneRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getPersonneAccess().getChansonsChanteurChansonCrossReference_4_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10=')'
			{
				newLeafNode(otherlv_10, grammarAccess.getPersonneAccess().getRightParenthesisKeyword_4_4());
			}
		)?
		(
			otherlv_11='chansonsAuteur'
			{
				newLeafNode(otherlv_11, grammarAccess.getPersonneAccess().getChansonsAuteurKeyword_5_0());
			}
			otherlv_12='('
			{
				newLeafNode(otherlv_12, grammarAccess.getPersonneAccess().getLeftParenthesisKeyword_5_1());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPersonneRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getPersonneAccess().getChansonsAuteurChansonCrossReference_5_2_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getPersonneAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getPersonneRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getPersonneAccess().getChansonsAuteurChansonCrossReference_5_3_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16=')'
			{
				newLeafNode(otherlv_16, grammarAccess.getPersonneAccess().getRightParenthesisKeyword_5_4());
			}
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getPersonneAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEDate
entryRuleEDate returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDateRule()); }
	iv_ruleEDate=ruleEDate
	{ $current=$iv_ruleEDate.current.getText(); }
	EOF;

// Rule EDate
ruleEDate returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw='EDate'
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getEDateAccess().getEDateKeyword());
	}
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule AlbumsType
ruleAlbumsType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='SINGLE'
			{
				$current = grammarAccess.getAlbumsTypeAccess().getSINGLEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAlbumsTypeAccess().getSINGLEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='COMPILATION'
			{
				$current = grammarAccess.getAlbumsTypeAccess().getCOMPILATIONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAlbumsTypeAccess().getCOMPILATIONEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
