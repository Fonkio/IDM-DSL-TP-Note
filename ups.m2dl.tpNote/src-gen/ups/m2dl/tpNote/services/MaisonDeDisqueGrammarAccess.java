/*
 * generated by Xtext 2.25.0
 */
package ups.m2dl.tpnote.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MaisonDeDisqueGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class MaisonDeDisqueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpnote.MaisonDeDisque.MaisonDeDisque");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMaisonDeDisqueKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cChansonsKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cChansonsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cChansonsChansonParserRuleCall_4_0 = (RuleCall)cChansonsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cChansonsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cChansonsChansonParserRuleCall_5_1_0 = (RuleCall)cChansonsAssignment_5_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cAlbumsKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cLeftCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cAlbumsAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cAlbumsAlbumParserRuleCall_9_0 = (RuleCall)cAlbumsAssignment_9.eContents().get(0);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cCommaKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cAlbumsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cAlbumsAlbumParserRuleCall_10_1_0 = (RuleCall)cAlbumsAssignment_10_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cPersonnesKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cLeftCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cPersonnesAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cPersonnesPersonneParserRuleCall_14_0 = (RuleCall)cPersonnesAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cCommaKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Assignment cPersonnesAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final RuleCall cPersonnesPersonneParserRuleCall_15_1_0 = (RuleCall)cPersonnesAssignment_15_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Keyword cRightCurlyBracketKeyword_17 = (Keyword)cGroup.eContents().get(17);
		
		//MaisonDeDisque returns MaisonDeDisque:
		//    'MaisonDeDisque'
		//    '{'
		//        'chansons' '{' chansons+=Chanson ( "," chansons+=Chanson)* '}'
		//        'albums' '{' albums+=Album ( "," albums+=Album)* '}'
		//        'personnes' '{' personnes+=Personne ( "," personnes+=Personne)* '}'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'MaisonDeDisque'
		//'{'
		//    'chansons' '{' chansons+=Chanson ( "," chansons+=Chanson)* '}'
		//    'albums' '{' albums+=Album ( "," albums+=Album)* '}'
		//    'personnes' '{' personnes+=Personne ( "," personnes+=Personne)* '}'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'MaisonDeDisque'
		public Keyword getMaisonDeDisqueKeyword_0() { return cMaisonDeDisqueKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'chansons'
		public Keyword getChansonsKeyword_2() { return cChansonsKeyword_2; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//chansons+=Chanson
		public Assignment getChansonsAssignment_4() { return cChansonsAssignment_4; }
		
		//Chanson
		public RuleCall getChansonsChansonParserRuleCall_4_0() { return cChansonsChansonParserRuleCall_4_0; }
		
		//( "," chansons+=Chanson)*
		public Group getGroup_5() { return cGroup_5; }
		
		//","
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//chansons+=Chanson
		public Assignment getChansonsAssignment_5_1() { return cChansonsAssignment_5_1; }
		
		//Chanson
		public RuleCall getChansonsChansonParserRuleCall_5_1_0() { return cChansonsChansonParserRuleCall_5_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
		
		//'albums'
		public Keyword getAlbumsKeyword_7() { return cAlbumsKeyword_7; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_8() { return cLeftCurlyBracketKeyword_8; }
		
		//albums+=Album
		public Assignment getAlbumsAssignment_9() { return cAlbumsAssignment_9; }
		
		//Album
		public RuleCall getAlbumsAlbumParserRuleCall_9_0() { return cAlbumsAlbumParserRuleCall_9_0; }
		
		//( "," albums+=Album)*
		public Group getGroup_10() { return cGroup_10; }
		
		//","
		public Keyword getCommaKeyword_10_0() { return cCommaKeyword_10_0; }
		
		//albums+=Album
		public Assignment getAlbumsAssignment_10_1() { return cAlbumsAssignment_10_1; }
		
		//Album
		public RuleCall getAlbumsAlbumParserRuleCall_10_1_0() { return cAlbumsAlbumParserRuleCall_10_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_11() { return cRightCurlyBracketKeyword_11; }
		
		//'personnes'
		public Keyword getPersonnesKeyword_12() { return cPersonnesKeyword_12; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_13() { return cLeftCurlyBracketKeyword_13; }
		
		//personnes+=Personne
		public Assignment getPersonnesAssignment_14() { return cPersonnesAssignment_14; }
		
		//Personne
		public RuleCall getPersonnesPersonneParserRuleCall_14_0() { return cPersonnesPersonneParserRuleCall_14_0; }
		
		//( "," personnes+=Personne)*
		public Group getGroup_15() { return cGroup_15; }
		
		//","
		public Keyword getCommaKeyword_15_0() { return cCommaKeyword_15_0; }
		
		//personnes+=Personne
		public Assignment getPersonnesAssignment_15_1() { return cPersonnesAssignment_15_1; }
		
		//Personne
		public RuleCall getPersonnesPersonneParserRuleCall_15_1_0() { return cPersonnesPersonneParserRuleCall_15_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_16() { return cRightCurlyBracketKeyword_16; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_17() { return cRightCurlyBracketKeyword_17; }
	}
	public class ChansonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpnote.MaisonDeDisque.Chanson");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cChansonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cAuteursKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cAuteursAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cAuteursPersonneCrossReference_5_0 = (CrossReference)cAuteursAssignment_5.eContents().get(0);
		private final RuleCall cAuteursPersonneEStringParserRuleCall_5_0_1 = (RuleCall)cAuteursPersonneCrossReference_5_0.eContents().get(1);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cAuteursAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final CrossReference cAuteursPersonneCrossReference_6_1_0 = (CrossReference)cAuteursAssignment_6_1.eContents().get(0);
		private final RuleCall cAuteursPersonneEStringParserRuleCall_6_1_0_1 = (RuleCall)cAuteursPersonneCrossReference_6_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cChanteursKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cLeftParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cChanteursAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final CrossReference cChanteursPersonneCrossReference_10_0 = (CrossReference)cChanteursAssignment_10.eContents().get(0);
		private final RuleCall cChanteursPersonneEStringParserRuleCall_10_0_1 = (RuleCall)cChanteursPersonneCrossReference_10_0.eContents().get(1);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cCommaKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Assignment cChanteursAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final CrossReference cChanteursPersonneCrossReference_11_1_0 = (CrossReference)cChanteursAssignment_11_1.eContents().get(0);
		private final RuleCall cChanteursPersonneEStringParserRuleCall_11_1_0_1 = (RuleCall)cChanteursPersonneCrossReference_11_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//Chanson returns Chanson:
		//    'Chanson'
		//    name=EString
		//    '{'
		//        'auteurs' '(' auteurs+=[Personne|EString] ( "," auteurs+=[Personne|EString])* ')'
		//        'chanteurs' '(' chanteurs+=[Personne|EString] ( "," chanteurs+=[Personne|EString])* ')'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Chanson'
		//name=EString
		//'{'
		//    'auteurs' '(' auteurs+=[Personne|EString] ( "," auteurs+=[Personne|EString])* ')'
		//    'chanteurs' '(' chanteurs+=[Personne|EString] ( "," chanteurs+=[Personne|EString])* ')'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Chanson'
		public Keyword getChansonKeyword_0() { return cChansonKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'auteurs'
		public Keyword getAuteursKeyword_3() { return cAuteursKeyword_3; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4() { return cLeftParenthesisKeyword_4; }
		
		//auteurs+=[Personne|EString]
		public Assignment getAuteursAssignment_5() { return cAuteursAssignment_5; }
		
		//[Personne|EString]
		public CrossReference getAuteursPersonneCrossReference_5_0() { return cAuteursPersonneCrossReference_5_0; }
		
		//EString
		public RuleCall getAuteursPersonneEStringParserRuleCall_5_0_1() { return cAuteursPersonneEStringParserRuleCall_5_0_1; }
		
		//( "," auteurs+=[Personne|EString])*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//auteurs+=[Personne|EString]
		public Assignment getAuteursAssignment_6_1() { return cAuteursAssignment_6_1; }
		
		//[Personne|EString]
		public CrossReference getAuteursPersonneCrossReference_6_1_0() { return cAuteursPersonneCrossReference_6_1_0; }
		
		//EString
		public RuleCall getAuteursPersonneEStringParserRuleCall_6_1_0_1() { return cAuteursPersonneEStringParserRuleCall_6_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_7() { return cRightParenthesisKeyword_7; }
		
		//'chanteurs'
		public Keyword getChanteursKeyword_8() { return cChanteursKeyword_8; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_9() { return cLeftParenthesisKeyword_9; }
		
		//chanteurs+=[Personne|EString]
		public Assignment getChanteursAssignment_10() { return cChanteursAssignment_10; }
		
		//[Personne|EString]
		public CrossReference getChanteursPersonneCrossReference_10_0() { return cChanteursPersonneCrossReference_10_0; }
		
		//EString
		public RuleCall getChanteursPersonneEStringParserRuleCall_10_0_1() { return cChanteursPersonneEStringParserRuleCall_10_0_1; }
		
		//( "," chanteurs+=[Personne|EString])*
		public Group getGroup_11() { return cGroup_11; }
		
		//","
		public Keyword getCommaKeyword_11_0() { return cCommaKeyword_11_0; }
		
		//chanteurs+=[Personne|EString]
		public Assignment getChanteursAssignment_11_1() { return cChanteursAssignment_11_1; }
		
		//[Personne|EString]
		public CrossReference getChanteursPersonneCrossReference_11_1_0() { return cChanteursPersonneCrossReference_11_1_0; }
		
		//EString
		public RuleCall getChanteursPersonneEStringParserRuleCall_11_1_0_1() { return cChanteursPersonneEStringParserRuleCall_11_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_12() { return cRightParenthesisKeyword_12; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	public class AlbumElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpnote.MaisonDeDisque.Album");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAlbumKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cAnneeSortieKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cAnneeSortieAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cAnneeSortieEStringParserRuleCall_3_1_0 = (RuleCall)cAnneeSortieAssignment_3_1.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTypeKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeAlbumTypeEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Keyword cChansonsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cChansonsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cChansonsChansonCrossReference_7_0 = (CrossReference)cChansonsAssignment_7.eContents().get(0);
		private final RuleCall cChansonsChansonEStringParserRuleCall_7_0_1 = (RuleCall)cChansonsChansonCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cChansonsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cChansonsChansonCrossReference_8_1_0 = (CrossReference)cChansonsAssignment_8_1.eContents().get(0);
		private final RuleCall cChansonsChansonEStringParserRuleCall_8_1_0_1 = (RuleCall)cChansonsChansonCrossReference_8_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cRightCurlyBracketKeyword_10 = (Keyword)cGroup.eContents().get(10);
		
		//Album returns Album:
		//    'Album'
		//    name=EString
		//    '{'
		//        ('anneeSortie' anneeSortie=EString)?
		//        ('type' type=AlbumType)?
		//        'chansons' '(' chansons+=[Chanson|EString] ( "," chansons+=[Chanson|EString])* ')'
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Album'
		//name=EString
		//'{'
		//    ('anneeSortie' anneeSortie=EString)?
		//    ('type' type=AlbumType)?
		//    'chansons' '(' chansons+=[Chanson|EString] ( "," chansons+=[Chanson|EString])* ')'
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Album'
		public Keyword getAlbumKeyword_0() { return cAlbumKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('anneeSortie' anneeSortie=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'anneeSortie'
		public Keyword getAnneeSortieKeyword_3_0() { return cAnneeSortieKeyword_3_0; }
		
		//anneeSortie=EString
		public Assignment getAnneeSortieAssignment_3_1() { return cAnneeSortieAssignment_3_1; }
		
		//EString
		public RuleCall getAnneeSortieEStringParserRuleCall_3_1_0() { return cAnneeSortieEStringParserRuleCall_3_1_0; }
		
		//('type' type=AlbumType)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'type'
		public Keyword getTypeKeyword_4_0() { return cTypeKeyword_4_0; }
		
		//type=AlbumType
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }
		
		//AlbumType
		public RuleCall getTypeAlbumTypeEnumRuleCall_4_1_0() { return cTypeAlbumTypeEnumRuleCall_4_1_0; }
		
		//'chansons'
		public Keyword getChansonsKeyword_5() { return cChansonsKeyword_5; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_6() { return cLeftParenthesisKeyword_6; }
		
		//chansons+=[Chanson|EString]
		public Assignment getChansonsAssignment_7() { return cChansonsAssignment_7; }
		
		//[Chanson|EString]
		public CrossReference getChansonsChansonCrossReference_7_0() { return cChansonsChansonCrossReference_7_0; }
		
		//EString
		public RuleCall getChansonsChansonEStringParserRuleCall_7_0_1() { return cChansonsChansonEStringParserRuleCall_7_0_1; }
		
		//( "," chansons+=[Chanson|EString])*
		public Group getGroup_8() { return cGroup_8; }
		
		//","
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//chansons+=[Chanson|EString]
		public Assignment getChansonsAssignment_8_1() { return cChansonsAssignment_8_1; }
		
		//[Chanson|EString]
		public CrossReference getChansonsChansonCrossReference_8_1_0() { return cChansonsChansonCrossReference_8_1_0; }
		
		//EString
		public RuleCall getChansonsChansonEStringParserRuleCall_8_1_0_1() { return cChansonsChansonEStringParserRuleCall_8_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_9() { return cRightParenthesisKeyword_9; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_10() { return cRightCurlyBracketKeyword_10; }
	}
	public class PersonneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpnote.MaisonDeDisque.Personne");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPersonneAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPersonneKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//Personne returns Personne:
		//    {Personne}
		//    'Personne'
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Personne}
		//'Personne'
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{Personne}
		public Action getPersonneAction_0() { return cPersonneAction_0; }
		
		//'Personne'
		public Keyword getPersonneKeyword_1() { return cPersonneKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpnote.MaisonDeDisque.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	public class AlbumTypeElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ups.m2dl.tpnote.MaisonDeDisque.AlbumType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cSINGLEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cSINGLESINGLEKeyword_0_0 = (Keyword)cSINGLEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cCOMPILATIONEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cCOMPILATIONCOMPILATIONKeyword_1_0 = (Keyword)cCOMPILATIONEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum AlbumType returns AlbumType:
		//                SINGLE = 'SINGLE' | COMPILATION = 'COMPILATION';
		public EnumRule getRule() { return rule; }
		
		//SINGLE = 'SINGLE' | COMPILATION = 'COMPILATION'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//SINGLE = 'SINGLE'
		public EnumLiteralDeclaration getSINGLEEnumLiteralDeclaration_0() { return cSINGLEEnumLiteralDeclaration_0; }
		
		//'SINGLE'
		public Keyword getSINGLESINGLEKeyword_0_0() { return cSINGLESINGLEKeyword_0_0; }
		
		//COMPILATION = 'COMPILATION'
		public EnumLiteralDeclaration getCOMPILATIONEnumLiteralDeclaration_1() { return cCOMPILATIONEnumLiteralDeclaration_1; }
		
		//'COMPILATION'
		public Keyword getCOMPILATIONCOMPILATIONKeyword_1_0() { return cCOMPILATIONCOMPILATIONKeyword_1_0; }
	}
	
	private final MaisonDeDisqueElements pMaisonDeDisque;
	private final ChansonElements pChanson;
	private final AlbumElements pAlbum;
	private final PersonneElements pPersonne;
	private final EStringElements pEString;
	private final AlbumTypeElements eAlbumType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MaisonDeDisqueGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMaisonDeDisque = new MaisonDeDisqueElements();
		this.pChanson = new ChansonElements();
		this.pAlbum = new AlbumElements();
		this.pPersonne = new PersonneElements();
		this.pEString = new EStringElements();
		this.eAlbumType = new AlbumTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("ups.m2dl.tpnote.MaisonDeDisque".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//MaisonDeDisque returns MaisonDeDisque:
	//    'MaisonDeDisque'
	//    '{'
	//        'chansons' '{' chansons+=Chanson ( "," chansons+=Chanson)* '}'
	//        'albums' '{' albums+=Album ( "," albums+=Album)* '}'
	//        'personnes' '{' personnes+=Personne ( "," personnes+=Personne)* '}'
	//    '}';
	public MaisonDeDisqueElements getMaisonDeDisqueAccess() {
		return pMaisonDeDisque;
	}
	
	public ParserRule getMaisonDeDisqueRule() {
		return getMaisonDeDisqueAccess().getRule();
	}
	
	//Chanson returns Chanson:
	//    'Chanson'
	//    name=EString
	//    '{'
	//        'auteurs' '(' auteurs+=[Personne|EString] ( "," auteurs+=[Personne|EString])* ')'
	//        'chanteurs' '(' chanteurs+=[Personne|EString] ( "," chanteurs+=[Personne|EString])* ')'
	//    '}';
	public ChansonElements getChansonAccess() {
		return pChanson;
	}
	
	public ParserRule getChansonRule() {
		return getChansonAccess().getRule();
	}
	
	//Album returns Album:
	//    'Album'
	//    name=EString
	//    '{'
	//        ('anneeSortie' anneeSortie=EString)?
	//        ('type' type=AlbumType)?
	//        'chansons' '(' chansons+=[Chanson|EString] ( "," chansons+=[Chanson|EString])* ')'
	//    '}';
	public AlbumElements getAlbumAccess() {
		return pAlbum;
	}
	
	public ParserRule getAlbumRule() {
		return getAlbumAccess().getRule();
	}
	
	//Personne returns Personne:
	//    {Personne}
	//    'Personne'
	//    name=EString;
	public PersonneElements getPersonneAccess() {
		return pPersonne;
	}
	
	public ParserRule getPersonneRule() {
		return getPersonneAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//enum AlbumType returns AlbumType:
	//                SINGLE = 'SINGLE' | COMPILATION = 'COMPILATION';
	public AlbumTypeElements getAlbumTypeAccess() {
		return eAlbumType;
	}
	
	public EnumRule getAlbumTypeRule() {
		return getAlbumTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
